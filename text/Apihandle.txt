import React, {useEffect, useState} from 'react';
import {
  View,
  Text,
  FlatList,
  Image,
  StyleSheet,
  ActivityIndicator,
} from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import AntDesign from 'react-native-vector-icons/AntDesign'

// Define the API URL
const API_URL = 'https://fakestoreapi.com/products';

const SeeMore = ({navigation}) => {
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);

  // Fetch Data from the API
  const fetchProducts = async () => {
    try {
      // First, try to get the data from AsyncStorage
      const storedProducts = await AsyncStorage.getItem('products');

      if (storedProducts) {
        // If data exists in AsyncStorage, use it
        setProducts(JSON.parse(storedProducts));
        setLoading(false);
      } else {
        // If no data in AsyncStorage, fetch from API
        const response = await fetch(API_URL);
        const data = await response.json();

        setProducts(data);

        // Save the fetched data to AsyncStorage
        await AsyncStorage.setItem('products', JSON.stringify(data));
        setLoading(false);
      }
    } catch (error) {
      console.error('Error fetching products: ', error);
    }
  };

  useEffect(() => {
    fetchProducts();
  }, []);

  // Render individual product card
  const renderProduct = ({item}) => (
    <View style={styles.card}>
      <Image source={{uri: item.image}} style={styles.image} />
      <View style={styles.cardContent}>
        <Text style={styles.title}>{item.title}</Text>
        <Text style={styles.price}>${item.price}</Text>
        <Text style={styles.description}>
          {item.description.substring(0, 60)}...
        </Text>
      </View>
    </View>
  );

  if (loading) {
    return (
      <ActivityIndicator
        size="large"
        color="#0000ff"
        style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}
      />
    );
  }

  return (
    <View>
      <AntDesign
        name="arrowleft"
        size={30}
        color={'black'}
        onPress={() => navigation.navigate('Home')}
      />
      <FlatList
        data={products}
        keyExtractor={item => item.id.toString()}
        renderItem={renderProduct}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  card: {
    backgroundColor: '#fff',
    margin: 10,
    padding: 10,
    borderRadius: 8,
    shadowColor: '#000',
    shadowOpacity: 0.1,
    shadowRadius: 8,
    elevation: 4,
    flexDirection: 'row',
    alignItems: 'center',
  },
  image: {
    width: 80,
    height: 80,
    resizeMode: 'contain',
    marginRight: 10,
  },
  cardContent: {
    flex: 1,
  },
  title: {
    fontSize: 16,
    fontWeight: 'bold',
  },
  price: {
    fontSize: 14,
    color: 'green',
    marginVertical: 4,
  },
  description: {
    fontSize: 12,
    color: '#888',
  },
});

export default SeeMore;
